import '../polyfill';
import Control, { ControlProps } from '../Control';
import '../../css/Attachment.css';
declare type FileObject = {
    name?: string;
    size?: number;
};
declare type AttachmentProps = ControlProps & {
    dropZoneText?: string;
    browseButtonText?: string;
    fileLimitText?: string;
    errorMessage?: string;
    isErrorVisible?: boolean;
    files?: FileObject[];
};
declare class Attachment extends Control<AttachmentProps> {
    private _onFileRemove;
    private _onFileAdd;
    private listFileEl;
    private attachInputTextEl;
    private constraintsFileEl;
    private fileErrorEl;
    private dropZoneElement;
    private dragEnterCounter;
    constructor(params?: AttachmentProps);
    rerender(changedAttr?: string[]): void;
    private _addFiles;
    setFiles(files: FileObject[]): void;
    getFiles(): FileObject[] | undefined;
    setDropZoneText(text: string): void;
    setBrowseButtonText(text: string): void;
    setFileLimitText(text: string): void;
    setErrorMessage(text: string): void;
    showError(): void;
    hideError(): void;
    on(eventName: string, callback: (params?: any) => void): void;
    private _removeFile;
    private createFileErrorEl;
    private createContainerEL;
    private _isFileOrDirectoryDrag;
    private _isFileDrop;
    private _onDrop;
    private _onDragOver;
    private _onDragEnter;
    private _onDragLeave;
    private createAttachDnDContainerEL;
    private createAttachDnDEL;
    private createlistFileEL;
    private bindAttachInputElEvent;
    private renderAttachInputEl;
    private createFileConstraintsEL;
}
export default Attachment;
